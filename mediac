#!/usr/bin/env zsh

set -e
((DEBUG)) && set -x


zshexit () {
    (($?)) && notify 'Unable to manage media' 'dialog-error'
}

current-mute-state () {
    pacmd list-sinks | awk '/\* /{t=1};/^\t*muted:/{if (t==1) print $2; t=0}'
}

volume () {
    pacmd list-sinks | awk '/\* /{t=1};/^\t*volume:/{if (t==1) print $5; t=0}'
}

notify () {
    local notification_pid_file previous_notification_pid
    notification_pid_file="$TMPDIR/notification.pid"
    previous_notification_pid="$(<$notification_pid_file)" || true
    notify-send.sh -p $@ \
        $( ((previous_notification_pid)) && echo "-r $previous_notification_pid")  \
        >! "$notification_pid_file"
}

notify_volume () {
    local volume
    volume="$(volume)"
    case "$(current-mute-state)" in
        (no)
            case "$volume" in
                ([3-8][0-9]%) icon='audio-volume-medium' ;;
                ([0-9][0-9][0-9]%);& (9[0-9]%) icon='audio-volume-high' ;;
                ([1-2][0-9]%);& ([1-9]%) icon='audio-volume-low' ;;
                (0%) icon='audio-volume-muted' ;;
            esac
            notify "$volume" --icon="status/${icon}" --expire-time=750;;
        (yes)
            notify "$volume" 'muted' \
                --icon='status/audio-volume-muted' \
                --expire-time=750 ;;
    esac
}

set-volume () {
    case "$1" in
        (+*) target_volume="$(( ${$(volume)%%%} + ${${1/+}:-5} ))" ;;
        (-*) target_volume="$(( ${$(volume)%%%} - ${${1/-}:-5} ))" ;;
        (*) target_volume="${1:-${$(volume)%%%}}" ;;
    esac
    pacmd set-sink-volume "${sink_index}" $((target_volume * 655))
    notify_volume
}

usage () {
    cat <<EOF >&2
mediac [next|previous|play-pause|toggle-mute [yes|no]] | [<volume>|[+|-]<delta>]
EOF
}

sink_index="$(pacmd list-sinks | awk '/\*/{print $3}')"
arg="$1"
arg2="$2"
case "$arg" in
    (next|previous|play-pause)
        playerctl "$arg"
        notify "$arg"
        ;;
    (toggle-mute)
        if [ "$arg2" = 'yes' ] || [ "$arg2" = 'no' ]
        then
            mute_state="$arg2"
        else
            mute_state="${${$(current-mute-state)/yes/0}/no/1}"
        fi
        pacmd set-sink-mute "${sink_index}" "$mute_state"
        notify_volume
        ;;
    (*)
        if [ "$arg" = 0 ] || [ $((arg)) -ne 0 ]
        then
            set-volume "$arg"
        else
            usage
        fi ;;
esac
