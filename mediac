#!/usr/bin/env zsh

set -e
((DEBUG)) && set -x

function zshexit {
    (($?)) && notifier 'Unable to manage media' 'dialog-error'
}

function mute-state {
    pacmd list-sinks | awk '/\*\ /{t=1};/^\t*muted:/{if (t==1) print $2; t=0}'
}

function volume {
    pacmd list-sinks | awk '/\*\ /{t=1};/^\t*volume:/{if (t==1) print $5; t=0}'
}

function notify_volume {
    local volume
    volume="$(volume)"
    case "$(mute-state)" in
        (no)
            case "$volume" in
                ([3-8][0-9]%) icon='audio-volume-medium' ;;
                ([0-9][0-9][0-9]%);& (9[0-9]%) icon='audio-volume-high' ;;
                ([1-2][0-9]%);& ([1-9]%) icon='audio-volume-low' ;;
                (0%) icon='audio-volume-muted' ;;
            esac
            notifier "$volume" '' "status/${icon}" ;;
        (yes)
            notifier 'muted' "$volume" 'status/audio-volume-muted' ;;
    esac
}

function set-volume {
    case "$1" in
        (+*) target_volume="$(( ${$(volume)%%%} + ${${1/+}:-5} ))" ;;
        (-*) target_volume="$(( ${$(volume)%%%} - ${${1/-}:-5} ))" ;;
        (*) target_volume="${1:-${$(volume)%%%}}" ;;
    esac
    pacmd set-sink-volume "${sink_index}" $((target_volume * 655))
    notify_volume
}

sink_index="$(pacmd list-sinks | awk '/\*/{print $3}')"
case "$1" in
    (next|previous|play-pause)
        playerctl "$1"
        notifier "$1"
        ;;
    (toggle-mute)
        pacmd set-sink-mute "${sink_index}" "${${$(mute-state)/yes/0}/no/1}"
        notify_volume
        ;;
    (*) set-volume "$1" ;;
esac
